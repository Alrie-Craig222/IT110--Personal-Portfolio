{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VTab.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeGroupItemProps } from \"../../composables/group.mjs\";\nimport { makeRouterProps } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps } from \"../../composables/theme.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { defineComponent, pick, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\n\nimport { VTabsSymbol } from \"./shared.mjs\";\nexport const VTab = defineComponent({\n  name: 'VTab',\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    stacked: Boolean,\n    title: String,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal'\n    },\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected'\n    }),\n    ...makeThemeProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const {\n      textColorClasses: sliderColorClasses,\n      textColorStyles: sliderColorStyles\n    } = useTextColor(props, 'sliderColor');\n    const isHorizontal = computed(() => props.direction === 'horizontal');\n    const isSelected = ref(false);\n    const rootEl = ref();\n    const sliderEl = ref();\n    function updateSlider(_ref2) {\n      let {\n        value\n      } = _ref2;\n      isSelected.value = value;\n      if (value) {\n        var _rootEl$value, _rootEl$value$$el$par;\n        const prevEl = (_rootEl$value = rootEl.value) == null ? void 0 : (_rootEl$value$$el$par = _rootEl$value.$el.parentElement) == null ? void 0 : _rootEl$value$$el$par.querySelector('.v-tab--selected .v-tab__slider');\n        const nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        const color = getComputedStyle(prevEl).color;\n        const prevBox = prevEl.getBoundingClientRect();\n        const nextBox = nextEl.getBoundingClientRect();\n        const xy = isHorizontal.value ? 'x' : 'y';\n        const XY = isHorizontal.value ? 'X' : 'Y';\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        const widthHeight = isHorizontal.value ? 'width' : 'height';\n        const prevPos = prevBox[xy];\n        const nextPos = nextBox[xy];\n        const delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        const origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]);\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight];\n        const sigma = 1.5;\n        nextEl.animate({\n          backgroundColor: [color, ''],\n          transform: [`translate${XY}(${delta}px) scale${XY}(${initialScale})`, `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`, ''],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n    useRender(() => {\n      const [btnProps] = pick(props, ['href', 'to', 'replace', 'icon', 'stacked', 'prependIcon', 'appendIcon', 'ripple', 'theme', 'disabled', 'selectedClass', 'value', 'color']);\n      return _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VTab\",\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab'],\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"variant\": \"text\",\n        \"rounded\": 0\n      }, btnProps, attrs, {\n        \"onGroup:selected\": updateSlider\n      }), {\n        default: () => [slots.default ? slots.default() : props.title, !props.hideSlider && _createVNode(\"div\", {\n          \"ref\": sliderEl,\n          \"class\": ['v-tab__slider', sliderColorClasses.value],\n          \"style\": sliderColorStyles.value\n        }, null)]\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VBtn","IconValue","makeGroupItemProps","makeRouterProps","makeTagProps","makeThemeProps","useTextColor","computed","ref","defineComponent","pick","standardEasing","useRender","VTabsSymbol","VTab","name","props","fixed","Boolean","icon","String","Function","Object","prependIcon","appendIcon","stacked","title","ripple","type","default","color","sliderColor","hideSlider","direction","selectedClass","setup","slots","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","isHorizontal","isSelected","rootEl","sliderEl","updateSlider","value","prevEl","_rootEl$value","$el","parentElement","_rootEl$value$$el$par","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","btnProps","undefined"],"sources":["../../../src/components/VTabs/VTab.tsx"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { defineComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport { VTabsSymbol } from './shared'\nimport type { PropType } from 'vue'\n\nexport const VTab = defineComponent({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        nextEl.animate({\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n"]},"metadata":{},"sourceType":"module"}