{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VCheckbox.css\"; // Components\n\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { filterCheckboxBtnProps, makeVCheckboxBtnProps, VCheckboxBtn } from \"./VCheckboxBtn.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent, filterInputAttrs, getUid, useRender } from \"../../util/index.mjs\";\nexport const VCheckbox = defineComponent({\n  name: 'VCheckbox',\n  inheritAttrs: false,\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps()\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const uid = getUid();\n    const id = computed(() => props.id || `checkbox-${uid}`);\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [checkboxProps, _2] = filterCheckboxBtnProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": \"v-checkbox\"\n      }, inputAttrs, inputProps, {\n        \"id\": id.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            isDisabled,\n            isReadonly\n          } = _ref2;\n          return _createVNode(VCheckboxBtn, _mergeProps(checkboxProps, {\n            \"id\": id.value,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value\n          }, controlAttrs), slots);\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":";AAAA;AACA,yB,CAEA;;SACSA,gB,EAAkBC,e,EAAiBC,M;SACnCC,sB,EAAwBC,qB,EAAuBC,Y,8BAExD;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,e,EAAiBC,gB,EAAkBC,M,EAAQC,S;AAEpD,OAAO,MAAMC,SAAS,GAAGJ,eAAe,CAAC;EACvCK,IAAI,EAAE,WADiC;EAGvCC,YAAY,EAAE,KAHyB;EAKvCC,KAAK,EAAE;IACL,GAAGb,eAAe,EADb;IAEL,GAAGG,qBAAqB;EAFnB,CALgC;EAUvCW,KAAKA,CAAED,KAAF,QAA2B;IAAA,IAAlB;MAAEE,KAAF;MAASC;IAAT,CAAkB;IAC9B,MAAMC,GAAG,GAAGT,MAAM,EAAlB;IACA,MAAMU,EAAE,GAAGb,QAAQ,CAAC,MAAMQ,KAAK,CAACK,EAAN,IAAa,YAAWD,GAAI,EAAnC,CAAnB;IAEAR,SAAS,CAAC,MAAM;MACd,MAAM,CAACU,UAAD,EAAaC,YAAb,IAA6Bb,gBAAgB,CAACQ,KAAD,CAAnD;MACA,MAAM,CAACM,UAAD,EAAaC,EAAb,IAAmBvB,gBAAgB,CAACc,KAAD,CAAzC;MACA,MAAM,CAACU,aAAD,EAAgBC,EAAhB,IAAsBtB,sBAAsB,CAACW,KAAD,CAAlD;MAEA;QAAA,SAEU;MAFV,GAGSM,UAHT,EAISE,UAJT;QAAA,MAKSH,EAAE,CAACO;MALZ;QAQM,GAAGT,KART;QASMU,OAAO,EAAEC;UAAA,IAAC;YACRT,EADQ;YAERU,UAFQ;YAGRC;UAHQ,CAAD;UAAA,8CAMAN,aANA;YAAA,MAOAL,EAAE,CAACO,KAPH;YAAA,YAQMG,UAAU,CAACH,KARjB;YAAA,YASMI,UAAU,CAACJ;UATjB,GAUAL,YAVA,GAWKJ,KAXL;QAAA;MATf;IA0BD,CA/BQ,CAAT;IAiCA,OAAO,EAAP;EACD;AAhDsC,CAAD,CAAjC","names":["filterInputProps","makeVInputProps","VInput","filterCheckboxBtnProps","makeVCheckboxBtnProps","VCheckboxBtn","computed","defineComponent","filterInputAttrs","getUid","useRender","VCheckbox","name","inheritAttrs","props","setup","attrs","slots","uid","id","inputAttrs","controlAttrs","inputProps","_1","checkboxProps","_2","value","default","_ref2","isDisabled","isReadonly"],"sources":["../../../src/components/VCheckbox/VCheckbox.tsx"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { filterCheckboxBtnProps, makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, filterInputAttrs, getUid, useRender } from '@/util'\n\nexport const VCheckbox = defineComponent({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps(),\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [checkboxProps, _2] = filterCheckboxBtnProps(props)\n\n      return (\n        <VInput\n          class=\"v-checkbox\"\n          { ...inputAttrs }\n          { ...inputProps }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n"]},"metadata":{},"sourceType":"module"}