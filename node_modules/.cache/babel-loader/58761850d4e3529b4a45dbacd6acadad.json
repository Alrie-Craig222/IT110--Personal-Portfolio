{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VListItem.css\"; // Components\n\nimport { VListItemAvatar } from \"./VListItemAvatar.mjs\";\nimport { VListItemHeader } from \"./VListItemHeader.mjs\";\nimport { VListItemIcon } from \"./VListItemIcon.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useList } from \"./list.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed, watch } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\"; // Types\n\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    lines: String,\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: [String, Number, Boolean],\n    title: [String, Number, Boolean],\n    value: null,\n    link: Boolean,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n  setup(props, _ref) {\n    var _link$isExactActive2;\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => {\n      var _props$value;\n      return (_props$value = props.value) != null ? _props$value : link.href.value;\n    });\n    const {\n      select,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent\n    } = useNestedItem(id, false);\n    const list = useList();\n    const isActive = computed(() => {\n      var _link$isExactActive;\n      return props.active || ((_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value) || isSelected.value;\n    });\n    const roundedProps = computed(() => props.rounded || props.nav);\n    const variantProps = computed(() => {\n      var _props$activeColor;\n      return {\n        color: isActive.value ? (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color : props.color,\n        variant: props.variant\n      };\n    });\n    if ((_link$isExactActive2 = link.isExactActive) != null && _link$isExactActive2.value && parent.value != null) {\n      root.open(parent.value, true);\n    }\n    watch(() => {\n      var _link$isExactActive3;\n      return (_link$isExactActive3 = link.isExactActive) == null ? void 0 : _link$isExactActive3.value;\n    }, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(roundedProps);\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined);\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value\n    }));\n    useRender(() => {\n      var _slots$prepend, _slots$default, _slots$append;\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !list || isSelected.value || isActive.value;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasHeader = !!(hasTitle || hasSubtitle);\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const isClickable = !props.disabled && (props.link || link.isClickable.value || props.value != null && !!list);\n      list == null ? void 0 : list.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable,\n          'v-list-item--nav': props.nav,\n          'v-list-item--prepend': !hasPrepend && (list == null ? void 0 : list.hasPrepend.value),\n          [`${props.activeClass}`]: isActive.value\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable ? 0 : undefined,\n        \"onClick\": isClickable && (e => {\n          var _link$navigate;\n          if (isGroupActivator) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          props.value != null && select(!isSelected.value, e);\n        })\n      }, {\n        default: () => [genOverlays(isClickable || isActive.value, 'v-list-item'), hasPrepend && _createVNode(_Fragment, null, [props.prependAvatar && _createVNode(VListItemAvatar, {\n          \"image\": props.prependAvatar,\n          \"start\": true\n        }, null), props.prependIcon && _createVNode(VListItemIcon, {\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, slotProps.value)]), hasHeader && _createVNode(VListItemHeader, {\n          \"key\": \"header\"\n        }, {\n          default: () => [hasTitle && _createVNode(VListItemTitle, {\n            \"key\": \"title\"\n          }, {\n            default: () => [slots.title ? slots.title({\n              title: props.title\n            }) : props.title]\n          }), hasSubtitle && _createVNode(VListItemSubtitle, null, {\n            default: () => [slots.subtitle ? slots.subtitle({\n              subtitle: props.subtitle\n            }) : props.subtitle]\n          })]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value), hasAppend && _createVNode(_Fragment, null, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, slotProps.value), props.appendAvatar && _createVNode(VListItemAvatar, {\n          \"image\": props.appendAvatar,\n          \"end\": true\n        }, null), props.appendIcon && _createVNode(VListItemIcon, {\n          \"icon\": props.appendIcon,\n          \"end\": true\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable]]);\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["VListItemAvatar","VListItemHeader","VListItemIcon","VListItemSubtitle","VListItemTitle","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useList","IconValue","Ripple","computed","watch","genericComponent","useRender","useNestedItem","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","lines","nav","prependAvatar","prependIcon","subtitle","Number","title","value","link","variant","setup","attrs","slots","id","href","select","isSelected","isIndeterminate","isGroupActivator","root","parent","list","isActive","isExactActive","_link$isExactActive","roundedProps","rounded","variantProps","color","open","_link$isExactActive3","val","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","lineClasses","undefined","slotProps","Tag","isLink","tag","hasColor","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","e","navigate","default","_slots$prepend","_slots$default","_slots$append"],"sources":["../../../src/components/VList/VListItem.tsx"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemIcon } from './VListItemIcon'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useList } from './list'\nimport { IconValue } from '@/composables/icons'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: [String, Number, Boolean],\n    title: [String, Number, Boolean],\n    value: null,\n    link: Boolean,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { select, isSelected, isIndeterminate, isGroupActivator, root, parent } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isSelected.value\n    })\n    const roundedProps = computed(() => props.rounded || props.nav)\n    const variantProps = computed(() => ({\n      color: isActive.value ? props.activeColor ?? props.color : props.color,\n      variant: props.variant,\n    }))\n\n    if (link.isExactActive?.value && parent.value != null) {\n      root.open(parent.value, true)\n    }\n\n    watch(() => link.isExactActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    }))\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !list || isSelected.value || isActive.value\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (props.link || link.isClickable.value || (props.value != null && !!list))\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            if (isGroupActivator) return\n\n            link.navigate?.(e)\n            props.value != null && select(!isSelected.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <>\n              { props.prependAvatar && (\n                <VListItemAvatar\n                  image={ props.prependAvatar }\n                  start\n                />\n              ) }\n\n              { props.prependIcon && (\n                <VListItemIcon\n                  icon={ props.prependIcon }\n                  start\n                />\n              ) }\n\n              { slots.prepend?.(slotProps.value) }\n            </>\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader key=\"header\">\n              { hasTitle && (\n                <VListItemTitle key=\"title\">\n                  { slots.title\n                    ? slots.title({ title: props.title })\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle({ subtitle: props.subtitle })\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            <>\n              { slots.append?.(slotProps.value) }\n\n              { props.appendAvatar && (\n                <VListItemAvatar\n                  image={ props.appendAvatar }\n                  end\n                />\n              ) }\n\n              { props.appendIcon && (\n                <VListItemIcon\n                  icon={ props.appendIcon }\n                  end\n                />\n              ) }\n            </>\n          ) }\n        </Tag>\n      )\n    })\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"]},"metadata":{},"sourceType":"module"}