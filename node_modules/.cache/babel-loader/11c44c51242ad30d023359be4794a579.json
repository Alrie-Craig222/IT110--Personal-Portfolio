{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport \"./VImg.css\"; // Components\n\nimport { VResponsive } from \"../VResponsive/index.mjs\"; // Directives\n\nimport intersect from \"../../directives/intersect/index.mjs\"; // Composables\n\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\n\nimport { computed, h, nextTick, onBeforeMount, ref, vShow, watch, withDirectives } from 'vue';\nimport { convertToUnit, defineComponent, SUPPORTS_INTERSECTION, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n  directives: {\n    intersect\n  },\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    srcset: String,\n    width: [String, Number],\n    ...makeTransitionProps()\n  },\n  emits: ['loadstart', 'load', 'error'],\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const currentSrc = ref(''); // Set from srcset\n\n    const image = ref();\n    const state = ref(props.eager ? 'loading' : 'idle');\n    const naturalWidth = ref();\n    const naturalHeight = ref();\n    const normalisedSrc = computed(() => {\n      return props.src && typeof props.src === 'object' ? {\n        src: props.src.src,\n        srcset: props.srcset || props.src.srcset,\n        lazySrc: props.lazySrc || props.src.lazySrc,\n        aspect: Number(props.aspectRatio || props.src.aspect)\n      } : {\n        src: props.src,\n        srcset: props.srcset,\n        lazySrc: props.lazySrc,\n        aspect: Number(props.aspectRatio || 0)\n      };\n    });\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;\n    });\n    watch(() => props.src, () => {\n      init(state.value !== 'idle');\n    }); // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init());\n    function init(isIntersecting) {\n      if (props.eager && isIntersecting) return;\n      if (SUPPORTS_INTERSECTION && !isIntersecting && !props.eager) return;\n      state.value = 'loading';\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image();\n        lazyImg.src = normalisedSrc.value.lazySrc;\n        pollForSize(lazyImg, null);\n      }\n      if (!normalisedSrc.value.src) return;\n      nextTick(() => {\n        var _image$value, _image$value2;\n        emit('loadstart', ((_image$value = image.value) == null ? void 0 : _image$value.currentSrc) || normalisedSrc.value.src);\n        if ((_image$value2 = image.value) != null && _image$value2.complete) {\n          if (!image.value.naturalWidth) {\n            onError();\n          }\n          if (state.value === 'error') return;\n          if (!aspectRatio.value) pollForSize(image.value, null);\n          onLoad();\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value);\n          getSrc();\n        }\n      });\n    }\n    function onLoad() {\n      var _image$value3;\n      getSrc();\n      state.value = 'loaded';\n      emit('load', ((_image$value3 = image.value) == null ? void 0 : _image$value3.currentSrc) || normalisedSrc.value.src);\n    }\n    function onError() {\n      var _image$value4;\n      state.value = 'error';\n      emit('error', ((_image$value4 = image.value) == null ? void 0 : _image$value4.currentSrc) || normalisedSrc.value.src);\n    }\n    function getSrc() {\n      const img = image.value;\n      if (img) currentSrc.value = img.currentSrc || img.src;\n    }\n    function pollForSize(img) {\n      let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      const poll = () => {\n        const {\n          naturalHeight: imgHeight,\n          naturalWidth: imgWidth\n        } = img;\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth;\n          naturalHeight.value = imgHeight;\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout);\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1;\n          naturalHeight.value = 1;\n        }\n      };\n      poll();\n    }\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover\n    }));\n    const __image = computed(() => {\n      var _slots$sources;\n      if (!normalisedSrc.value.src || state.value === 'idle') return;\n      const img = h('img', {\n        class: ['v-img__img', containClasses.value],\n        src: normalisedSrc.value.src,\n        srcset: normalisedSrc.value.srcset,\n        sizes: props.sizes,\n        ref: image,\n        onLoad,\n        onError\n      });\n      const sources = (_slots$sources = slots.sources) == null ? void 0 : _slots$sources.call(slots);\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [withDirectives(sources ? _createVNode(\"picture\", {\n          \"class\": \"v-img__picture\"\n        }, [sources, img]) : img, [[vShow, state.value === 'loaded']])]\n      });\n    });\n    const __preloadImage = computed(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [normalisedSrc.value.lazySrc && state.value !== 'loaded' && _createVNode(\"img\", {\n        \"class\": ['v-img__img', 'v-img__img--preload', containClasses.value],\n        \"src\": normalisedSrc.value.lazySrc,\n        \"alt\": \"\"\n      }, null)]\n    }));\n    const __placeholder = computed(() => {\n      if (!slots.placeholder) return;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [(state.value === 'loading' || state.value === 'error' && !slots.error) && _createVNode(\"div\", {\n          \"class\": \"v-img__placeholder\"\n        }, [slots.placeholder()])]\n      });\n    });\n    const __error = computed(() => {\n      if (!slots.error) return;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [state.value === 'error' && _createVNode(\"div\", {\n          \"class\": \"v-img__error\"\n        }, [slots.error()])]\n      });\n    });\n    const __gradient = computed(() => {\n      if (!props.gradient) return;\n      return _createVNode(\"div\", {\n        \"class\": \"v-img__gradient\",\n        \"style\": {\n          backgroundImage: `linear-gradient(${props.gradient})`\n        }\n      }, null);\n    });\n    const isBooted = ref(false);\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true;\n            });\n          });\n          stop();\n        }\n      });\n    }\n    useRender(() => _withDirectives(_createVNode(VResponsive, {\n      \"class\": ['v-img', {\n        'v-img--booting': !isBooted.value\n      }],\n      \"style\": {\n        width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width)\n      },\n      \"aspectRatio\": aspectRatio.value,\n      \"aria-label\": props.alt,\n      \"role\": props.alt ? 'img' : undefined\n    }, {\n      additional: () => [__image.value, __preloadImage.value, __gradient.value, __placeholder.value, __error.value],\n      default: slots.default\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: init,\n      options: props.options\n    }, null, {\n      once: true\n    }]]));\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VResponsive","intersect","makeTransitionProps","MaybeTransition","computed","h","nextTick","onBeforeMount","ref","vShow","watch","withDirectives","convertToUnit","defineComponent","SUPPORTS_INTERSECTION","useRender","VImg","name","directives","props","aspectRatio","String","Number","alt","cover","Boolean","eager","gradient","lazySrc","options","type","Object","default","root","undefined","rootMargin","threshold","sizes","src","srcset","width","emits","setup","emit","slots","currentSrc","image","state","naturalWidth","naturalHeight","normalisedSrc","aspect","value","init","isIntersecting","lazyImg","Image","pollForSize","_image$value2","complete","onError","onLoad","getSrc","img","timeout","poll","imgHeight","imgWidth","setTimeout","endsWith","startsWith","containClasses","__image","class","sources","_slots$sources","transition","__preloadImage","__placeholder","placeholder","error","__error","__gradient","backgroundImage","isBooted","stop","val","requestAnimationFrame","additional","handler","once"],"sources":["../../../src/components/VImg/VImg.tsx"],"sourcesContent":["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  h,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  defineComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: ['loadstart', 'load', 'error'],\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = computed(() => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return\n\n      const img = h('img', {\n        class: ['v-img__img', containClasses.value],\n        src: normalisedSrc.value.src,\n        srcset: normalisedSrc.value.srcset,\n        sizes: props.sizes,\n        ref: image,\n        onLoad,\n        onError,\n      })\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __preloadImage = computed(() => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt=\"\"\n          />\n        )}\n      </MaybeTransition>\n    ))\n\n    const __placeholder = computed(() => {\n      if (!slots.placeholder) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __error = computed(() => {\n      if (!slots.error) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __gradient = computed(() => {\n      if (!props.gradient) return\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    })\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n        v-slots={{\n          additional: () => [__image.value, __preloadImage.value, __gradient.value, __placeholder.value, __error.value],\n          default: slots.default,\n        }}\n      />\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n"]},"metadata":{},"sourceType":"module"}