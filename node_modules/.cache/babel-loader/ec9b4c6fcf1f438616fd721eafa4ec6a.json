{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\";\nimport { createList } from \"./list.mjs\"; // Types\n\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: {\n    items: Array\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    createList();\n    return () => {\n      var _slots$default, _slots$default2, _props$items;\n      return (_slots$default = (_slots$default2 = slots.default) == null ? void 0 : _slots$default2.call(slots)) != null ? _slots$default : (_props$items = props.items) == null ? void 0 : _props$items.map(_ref2 => {\n        let {\n          children,\n          props: itemProps,\n          type,\n          raw: item\n        } = _ref2;\n        if (type === 'divider') return _createVNode(VDivider, itemProps, null);\n        if (type === 'subheader') return _createVNode(VListSubheader, itemProps, slots);\n        const slotsWithItem = {\n          subtitle: slots.subtitle ? slotProps => {\n            var _slots$subtitle;\n            return (_slots$subtitle = slots.subtitle) == null ? void 0 : _slots$subtitle.call(slots, {\n              ...slotProps,\n              item\n            });\n          } : undefined,\n          prepend: slots.prepend ? slotProps => {\n            var _slots$prepend;\n            return (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, {\n              ...slotProps,\n              item\n            });\n          } : undefined,\n          append: slots.append ? slotProps => {\n            var _slots$append;\n            return (_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, {\n              ...slotProps,\n              item\n            });\n          } : undefined,\n          default: slots.default ? slotProps => {\n            var _slots$default3;\n            return (_slots$default3 = slots.default) == null ? void 0 : _slots$default3.call(slots, {\n              ...slotProps,\n              item\n            });\n          } : undefined,\n          title: slots.title ? slotProps => {\n            var _slots$title;\n            return (_slots$title = slots.title) == null ? void 0 : _slots$title.call(slots, {\n              ...slotProps,\n              item\n            });\n          } : undefined\n        };\n        return children ? _createVNode(VListGroup, {\n          \"value\": itemProps == null ? void 0 : itemProps.value\n        }, {\n          activator: _ref3 => {\n            let {\n              props: activatorProps\n            } = _ref3;\n            return slots.header ? slots.header({\n              ...itemProps,\n              ...activatorProps\n            }) : _createVNode(VListItem, _mergeProps(itemProps, activatorProps), slotsWithItem);\n          },\n          default: () => _createVNode(VListChildren, {\n            \"items\": children\n          }, slots)\n        }) : slots.item ? slots.item(itemProps) : _createVNode(VListItem, itemProps, slotsWithItem);\n      });\n    };\n  }\n});","map":{"version":3,"mappings":";;AAAA;SACSA,Q;SACAC,U;SACAC,S;SACAC,c,gCAET;;SACSC,gB;SACAC,U,sBAET;;AAOA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,GAWxC;EACHG,IAAI,EAAE,eADH;EAGHC,KAAK,EAAE;IACLC,KAAK,EAAEC;EADF,CAHJ;EAOHC,KAAKA,CAAEH,KAAF,QAAoB;IAAA,IAAX;MAAEI;IAAF,CAAW;IACvBP,UAAU;IAEV,OAAO;MAAA;MAAA,4CAAMO,KAAK,CAACC,OAAZ,qBAAMC,0BAAK,CAAX,6CAA2BN,KAAK,CAACC,KAAjC,qBAA2BM,aAAaC,GAAb,CAAiBC,SAAqD;QAAA,IAApD;UAAEC,QAAF;UAAYV,KAAK,EAAEW,SAAnB;UAA8BC,IAA9B;UAAoCC,GAAG,EAAEC;QAAzC,CAAoD;QACtG,IAAIF,IAAI,KAAK,SAAb,EAAwB,8BAAqBD,SAArB;QAExB,IAAIC,IAAI,KAAK,WAAb,EAA0B,oCAA2BD,SAA3B,EAAgDP,KAAhD;QAE1B,MAAMW,aAAa,GAAG;UACpBC,QAAQ,EAAEZ,KAAK,CAACY,QAAN,GAAkBC,SAAD;YAAA;YAAA,0BAAoBb,KAAK,CAACY,QAA1B,qBAAoBE,0BAAK,EAAY;cAAE,GAAGD,SAAL;cAAgBH;YAAhB,CAAZ,CAAzB;UAAA,CAAjB,GAAgFK,SADtE;UAEpBC,OAAO,EAAEhB,KAAK,CAACgB,OAAN,GAAiBH,SAAD;YAAA;YAAA,yBAAoBb,KAAK,CAACgB,OAA1B,qBAAoBC,yBAAK,EAAW;cAAE,GAAGJ,SAAL;cAAgBH;YAAhB,CAAX,CAAzB;UAAA,CAAhB,GAA8EK,SAFnE;UAGpBG,MAAM,EAAElB,KAAK,CAACkB,MAAN,GAAgBL,SAAD;YAAA;YAAA,wBAAoBb,KAAK,CAACkB,MAA1B,qBAAoBC,wBAAK,EAAU;cAAE,GAAGN,SAAL;cAAgBH;YAAhB,CAAV,CAAzB;UAAA,CAAf,GAA4EK,SAHhE;UAIpBd,OAAO,EAAED,KAAK,CAACC,OAAN,GAAiBY,SAAD;YAAA;YAAA,0BAAoBb,KAAK,CAACC,OAA1B,qBAAoBmB,0BAAK,EAAW;cAAE,GAAGP,SAAL;cAAgBH;YAAhB,CAAX,CAAzB;UAAA,CAAhB,GAA8EK,SAJnE;UAKpBM,KAAK,EAAErB,KAAK,CAACqB,KAAN,GAAeR,SAAD;YAAA;YAAA,uBAAoBb,KAAK,CAACqB,KAA1B,qBAAoBC,uBAAK,EAAS;cAAE,GAAGT,SAAL;cAAgBH;YAAhB,CAAT,CAAzB;UAAA,CAAd,GAA0EK;QAL7D,CAAtB;QAQA,OAAOT,QAAQ;UAAA,SAEHC,SAFG,oBAEHA,SAAS,CAAEgB;QAFR;UAKTC,SAAS,EAAEC;YAAA,IAAC;cAAE7B,KAAK,EAAE8B;YAAT,CAAD;YAAA,OAA+B1B,KAAK,CAAC2B,MAAN,GACtC3B,KAAK,CAAC2B,MAAN,CAAa;cAAE,GAAGpB,SAAL;cAAgB,GAAGmB;YAAnB,CAAb,CADsC,uCAEtBnB,SAFsB,EAELmB,cAFK,GAEsBf,aAFtB,CAA/B;UAAA,CALF;UAQTV,OAAO,EAAEA;YAAA,SACgBK;UADhB,GACqCN,KADrC;QARA,KAcbA,KAAK,CAACU,IAAN,GAAaV,KAAK,CAACU,IAAN,CAAWH,SAAX,CAAb,2BAESA,SAFT,EAGcI,aAHd,CAdF;MAqBD,CAlCiC,CAA3B;IAAA,CAAP;EAmCD;AA7CE,CAXwC,CAAtC","names":["VDivider","VListGroup","VListItem","VListSubheader","genericComponent","createList","VListChildren","name","props","items","Array","setup","slots","default","_slots$default2","_props$items","map","_ref2","children","itemProps","type","raw","item","slotsWithItem","subtitle","slotProps","_slots$subtitle","undefined","prepend","_slots$prepend","append","_slots$append","_slots$default3","title","_slots$title","value","activator","_ref3","activatorProps","header"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VDivider } from '../VDivider'\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\n\n// Utilities\nimport { genericComponent } from '@/util'\nimport { createList } from './list'\n\n// Types\nimport type { InternalListItem } from './VList'\nimport type { ListItemSubtitleSlot, ListItemTitleSlot } from './VListItem'\nimport type { ListGroupActivatorSlot } from './VListGroup'\nimport type { MakeSlots } from '@/util'\nimport type { Prop } from 'vue'\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    default: []\n    header: [ListGroupActivatorSlot]\n    item: [T]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListChildren',\n\n  props: {\n    items: Array as Prop<InternalListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') return <VDivider {...itemProps} />\n\n      if (type === 'subheader') return <VListSubheader {...itemProps} v-slots={ slots } />\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        default: slots.default ? (slotProps: any) => slots.default?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => slots.header\n              ? slots.header({ ...itemProps, ...activatorProps })\n              : <VListItem { ...itemProps } { ...activatorProps } v-slots={ slotsWithItem } />,\n            default: () => (\n              <VListChildren items={ children } v-slots={ slots } />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item(itemProps) : (\n          <VListItem\n            { ...itemProps }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}